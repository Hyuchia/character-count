!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports["character-count"]=t():e.CharacterCount=t()}(self,(function(){return(()=>{"use strict";var e={d:(t,o)=>{for(var r in o)e.o(o,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:o[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{default:()=>o});const o=e=>{const t=["️"],o=[...e].filter((e=>-1===t.indexOf(e))),r=o.filter((e=>1===e.length&&"‍"!==e)).length,n=o.filter((e=>"‍"===e)).length,f=o.filter((e=>e.length>1)).length,l=n>0?2.5:2;return r+Math.round(f/l)};return t})()}));
//# sourceMappingURL=character-count.min.js.map